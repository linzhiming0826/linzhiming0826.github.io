---
layout:     post
title:      "将你的代码发布至pypi"
subtitle:   "随时随地pip安装"
date:       "2018-07-06"
author:     "TuoX"
header-img: "img/post-26/bg.png"
---

# 简介

pip安装类库的方式门槛并没有那么高，当你想把自己写的东西分享给大家使用，那发布在pypi上会是一个很好的选择。

# 安装

保证系统已经安装好pip

1.注册pypi账号

[地址](https://pypi.org)

2.更新setuptools、twine

```bash
python -m pip install -U setuptools

python -m pip install -U twine
```

3.更新配置

windows:c:/用户/用户名/.pypirc  windows新建无文件名的文件方式为.pypirc.

linux:~/.pypirc   

填入：

    [distutils]
    index-servers =
        pypi

    [pypi]
    repository: https://upload.pypi.org/legacy/
    username: TuoX # 账号
    password: ***** # 密码

可以参考官方链接：[链接](https://packaging.python.org/guides/migrating-to-pypi-org/)

4.项目文件目录,这里以pddsdk为说明

    pddsdk
        -pddsdk
            -__init__.py
            -client.py
        -README.rst
        -setup.py

5.安装文件说明 setup.py

```python
import io
from setuptools import setup, find_packages

with io.open('README.rst', 'rt', encoding='utf8') as f:
    readme = f.read()

setup(
    name='pddsdk',# 项目名称
    version='0.1.9',# 版本号
    description='an open source api for pingduoduo',# 简单描述
    long_description=readme,# 详情描述
    url='https://github.com/linzhiming0826/pddsdk',# 项目地址
    author='TuoX', # 作者
    author_email='120549827@qq.com', # 作者邮箱
    license='MIT', # 授权的协议
    classifiers=[
        'Development Status :: 3 - Alpha',
        'Intended Audience :: Developers',
        'Topic :: Software Development :: Libraries :: Python Modules',
        'License :: OSI Approved :: MIT License',
        'Programming Language :: Python :: 3.5',
    ],
    keywords='pddsdk pingduoduo api extend',# 关键词
    # You can just specify the packages manually here if your project is
    # simple. Or you can use find_packages().
    packages=find_packages(),
    install_requires=['requests'], # 需要要求安装的包
    # List additional groups of dependencies here
    extras_require={}
)
```

6.测试

```bash
python setup.py check
```

7.发布

```bash
python setup.py sdist upload
```

8.rst写法说明

[链接](http://docutils.sourceforge.net/docs/user/rst/quickref.html)

# 结语

以开放的姿态面对技术，更能够促进自身技术的提升。